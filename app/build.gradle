apply plugin: 'com.android.application'
// Hay que aplicar el plugin de objectbox porque si no no funciona
apply plugin: 'io.objectbox'
// Fabric
apply plugin: 'io.fabric'

// Android Annotations
dependencies {
    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
}

// Dagger
dependencies {
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
}

// region Fabric
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
        transitive = true;
    }
}

// endregion

def isCIMachine() {
    return project.hasProperty('fabricKey') && project.hasProperty("fabricSecret");
}

android {
    compileSdkVersion compileSDK

    // region Configuracion Fabric
    def fabricFile = file('fabric.properties')
    def fabricApiKey
    if (isCIMachine()) {
        fabricFile.createNewFile()

        def Properties fabricProps = new Properties();
        fabricProps.load(new FileInputStream(fabricFile))

        fabricProps.setProperty("apiKey", fabricKey)
        fabricProps.setProperty("apiSecret", fabricSecret)

        fabricProps.store(fabricFile.newWriter(), null)

        fabricApiKey = fabricKey
    } else {
        def Properties fabricProps = new Properties();
        fabricProps.load(new FileInputStream(fabricFile))

        fabricApiKey = fabricProps.getProperty("apiKey")
    }

// endregion

// region Configuracion Version autoincremental

    // Autoincrement del version code see https://stackoverflow.com/a/21405744
    def code
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        code = versionProps['VERSION_CODE'].toInteger()

        if (isCIMachine()) {
            code = code + 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

// endregion

    defaultConfig {
        applicationId (packageName + "app")
        minSdkVersion minVersion
        targetSdkVersion targetSDK
        versionCode code
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [fabricApiKey: fabricApiKey, launchActivityName: launchActivity]

        buildConfigField "String", "END_POINT", "\"https://api.nasa.gov/mars-photos/\""
        buildConfigField "String", "API_KEY", "\"DEMO_KEY\""

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {


        debug {
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        jenkins {
            initWith release
        }
    }
}

dependencies {

    // Modelo
    implementation project(':model')

    // Common
    implementation project(':common')

    // Data Referencia necesaria para que dagger pueda hacer las inyecciones de RepositoryModule
    implementation project(':data')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'

    // GSON
    implementation "org.immutables:gson:$gsonVersion"

    // Joda-time
    implementation "joda-time:joda-time:$jodatimeVersion"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //  LicensesDialog
    implementation('de.psdev.licensesdialog:licensesdialog:1.8.3')

    // Calendario
    implementation 'com.wdullaer:materialdatetimepicker:3.5.0'

    // Android
    implementation "com.android.support:appcompat-v7:$androidSupport"
    implementation "com.android.support:support-v4:$androidSupport"
    implementation "com.android.support:recyclerview-v7:$androidSupport"
    implementation "com.android.support:design:$androidSupport"
    implementation "com.android.support:cardview-v7:$androidSupport"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}