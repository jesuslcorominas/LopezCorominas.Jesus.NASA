apply plugin: 'com.android.application'
// Hay que aplicar el plugin de objectbox porque si no no funciona
apply plugin: 'io.objectbox'

// Android Annotations
dependencies {
    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
}

// Dagger
dependencies {
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
}

def androidSupport = '27.0.2'

android {
    compileSdkVersion 27

    def versionPropsFile = file('version.properties')

    // Autoincrement del version code see https://stackoverflow.com/a/21405744
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.jesuslcorominas.nasa.app"
            minSdkVersion minVersion
            targetSdkVersion targetSDK
            versionCode code
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            buildConfigField "String", "END_POINT", "\"https://api.nasa.gov/mars-photos/\""
            buildConfigField "String", "API_KEY", "\"DEMO_KEY\""

            vectorDrawables.useSupportLibrary = true
        }

    } else {
        throw new GradleException("Could not read version.properties!")

    }
    buildTypes {

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

dependencies {

    // Modelo
    implementation project(':model')

    // Common
    implementation project(':common')

    // Data Referencia necesaria para que dagger pueda hacer las inyecciones de RepositoryModule
    implementation project(':data')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'

    // GSON
    implementation "org.immutables:gson:$gsonVersion"

    // Joda-time
    implementation "joda-time:joda-time:$jodatimeVersion"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //  LicensesDialog
    implementation ('de.psdev.licensesdialog:licensesdialog:1.8.3')

    // Calendario
    implementation 'com.wdullaer:materialdatetimepicker:3.5.0'

    // Android
    implementation "com.android.support:appcompat-v7:$androidSupport"
    implementation "com.android.support:support-v4:$androidSupport"
    implementation "com.android.support:recyclerview-v7:$androidSupport"
    implementation "com.android.support:design:$androidSupport"
    implementation "com.android.support:cardview-v7:$androidSupport"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}