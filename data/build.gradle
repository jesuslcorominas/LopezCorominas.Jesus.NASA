// ObjectBox
buildscript {
    ext {
        osName = System.getProperty("os.name").toLowerCase()
        isLinux = osName.contains("linux")
        isWindows = osName.contains("windows")
        is64 = System.getProperty("sun.arch.data.model") == "64"
        isLinux64 = isLinux && is64
        isWindows64 = isWindows && is64
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "io.objectbox:objectbox-gradle-plugin:$objectboxVersion"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.13"
    }
}

// Para dagger
plugins {
    id "net.ltgt.apt" version "0.10"
}

apply plugin: 'java'
// Para objectbox
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'io.objectbox'

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

// ObjectBox
dependencies {
    implementation "io.objectbox:objectbox-java:$objectboxVersion"

    if (isLinux64) {
        implementation "io.objectbox:objectbox-linux:$objectboxVersion"
    } else if (isWindows64) {
        implementation "io.objectbox:objectbox-windows:$objectboxVersion"
    } else println("Native dependency could not be set up for unsupported OS: " + osName)

    testImplementation 'junit:junit:4.12'
}

// Dagger
dependencies {
    implementation "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Commons
    implementation project(':common')

    // Commons
    implementation project(':model')

    // Servicios rest
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // GSON
    implementation "org.immutables:gson:$gsonVersion"

    // Joda-time
    implementation "joda-time:joda-time:$jodatimeVersion"

    // ModelMapper
    compile "org.modelmapper:modelmapper:$modelMapperVersion"

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:3.1.4"
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.7.21'
    testImplementation 'org.powermock:powermock-module-junit4:1.5'
}